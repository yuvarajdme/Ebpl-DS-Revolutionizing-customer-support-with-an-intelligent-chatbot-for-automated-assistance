import json
from difflib import get_close_matches

class Chatbot:
    def __init__(self, knowledge_base_path="data/knowledge_base.json"):
        self.knowledge_base = self.load_knowledge_base(knowledge_base_path)

    def load_knowledge_base(self, path):
        with open(path, 'r') as f:
            return json.load(f)

    def find_best_match(self, user_question):
        best_match = None
        max_similarity = 0
        for category, qa_pairs in self.knowledge_base.items():
            for qa in qa_pairs:
                similarity = get_close_matches(user_question, [qa["question"]], n=1, cutoff=0.6)
                if similarity:
                    if similarity[0] == qa["question"]:
                        return qa["answer"] # Exact match found
                    elif similarity[0] and len(similarity[0]) > max_similarity:
                        max_similarity = len(similarity[0])
                        best_match = qa["answer"]
        return best_match

    def get_response(self, user_input):
        best_match = self.find_best_match(user_input)
        if best_match:
            return best_match
        else:
            return "I'm sorry, I don't have an answer to that question. Could you please rephrase or ask something else?"

    def run(self):
        print("Welcome to the Ebpl-DS Customer Support Chatbot!")
        while True:
            user_input = input("You: ")
            if user_input.lower() in ['quit', 'exit', 'bye']:
                print("Chatbot: Goodbye!")
                break
            response = self.get_response(user_input)
            print("Chatbot:", response)

if __name__ == "__main__":
    chatbot = Chatbot()
    chatbot.run()